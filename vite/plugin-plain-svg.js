import fs from"fs";import SVGO from"svgo";import{SourceMapGenerator}from"source-map";const defaults={encoding:"utf8",optimize:!1,svgoConfig:{}};export default function(a={}){const b=process.cwd().replace(/\\/g,"/"),c=/\.svg$/,d=Object.assign({},defaults,a),e=new SVGO(d.svgoConfig);return{name:"plain-svg",async transform(a,f){const g=c.test(f);if(g){const c=f.replace(/\\/g,"/"),g=new SourceMapGenerator({file:c,sourceRoot:b});g.setSourceContent(c,a),g.addMapping({source:c,original:{line:1,column:1},generated:{line:1,column:1}});let h=fs.readFileSync(f,d.encoding);if(d.optimize){const a=await e.optimize(h,{path:f});h=a.data}return{code:"export default "+JSON.stringify(h),map:JSON.parse(g.toString())}}},async generateBundle(a,b){for(const f in b){const a=c.test(f);if(a){const a=b[f];if(d.optimize&&"asset"===a.type){const b=a.source.toString(d.encoding),c=await e.optimize(b,{path:f});a.source=Buffer.from(c.data,d.encoding)}}}}}}